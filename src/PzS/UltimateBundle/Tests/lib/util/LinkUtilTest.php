<?php
/**
 * Contains the LinkUtil unit test.
 * 
 * LICENSE:
 * This file is part of the Ultimate CMS.
 *
 * The Ultimate CMS is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * The Ultimate CMS is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with the Ultimate CMS.  If not, see {@link http://www.gnu.org/licenses/}.
 * 
 * @author		Jim Martens
 * @copyright	2011-2012 Jim Martens
 * @license		http://www.gnu.org/licenses/lgpl-3.0 GNU Lesser General Public License, version 3
 */
namespace PzS\UltimateBundle\Tests\lib\util;
use ultimate\util\LinkUtil;

/**
 * Test class for LinkUtil.
 * Generated by PHPUnit on 2012-12-09 at 18:47:44.
 */
class LinkUtilTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @covers ultimate\util\LinkUtil::isAvailableURL
     */
    public function testIsAvailableURL()
    {
        $url = 'http://www.plugins-zum-selberbauen.de';
        $isAvailable = LinkUtil::isAvailableURL($url);
        $this->assertEquals(true, $isAvailable, 'The availability has not been correctly spotted.');
    }

    /**
     * @covers ultimate\util\LinkUtil::isValidURL
     */
    public function testIsValidURL()
    {
    	$url = 'http://arsch.com';
    	$isValid = LinkUtil::isValidURL($url);
    	$this->assertEquals(true, $isValid, 'The correct link was declared invalid.');
    	
    	$url = 'http://nalhutt';
    	$isValid = LinkUtil::isValidURL($url);
    	$this->assertEquals(false, $isValid, 'The invalid link has not been detected.');
    	
    	$url = 'ftp://nalhutt.de';
    	$isValid = LinkUtil::isValidURL($url);
    	$this->assertEquals(false, $isValid, 'The non existant link has not been detected.');
    	
    	$url = 'ftp://ftp.funet.fi';
    	$isValid = LinkUtil::isValidURL($url);
    	$this->assertEquals(true, $isValid, 'The correct link was declared invalid.');
    }

    /**
     * @covers ultimate\util\LinkUtil::decodePunycodeDomain
     */
    public function testDecodePunycodeDomain()
    {
        $punycodeDomain = 'xn--aeou-ynaz2k1b.de';
        $decodedDomain = LinkUtil::decodePunycodeDomain($punycodeDomain);
        $this->assertEquals('äaeöouüß.de', $decodedDomain, 'The domain has not been properly decoded.');
    }

    /**
     * @covers ultimate\util\LinkUtil::encodePunycodeDomain
     */
    public function testEncodePunycodeDomain()
    {
        $utf8Domain = 'eine-schöne-scheiße.de';
        $encodedURL = LinkUtil::encodePunycodeDomain($utf8Domain);
        $this->assertEquals('xn--eine-schne-scheie-lob24b.de', $encodedURL, 'The domain has not been properly encoded.');
    }

    /**
     * @covers ultimate\util\LinkUtil::parseURL
     */
    public function testParseURL()
    {
    	$url = 'http://hund.com';
        $urlParsed = LinkUtil::parseURL($url);
        $this->assertEquals('http://hund.com', $urlParsed, 'There was nothing to encode.');
        
        $url = 'http://schöne-zeiten-mit-de.iner.scheiße.de';
        $urlParsed = LinkUtil::parseURL($url);
        $this->assertEquals('http://xn--schne-zeiten-mit-de-s6b.iner.xn--scheie-fta.de', $urlParsed, 'The link has not been correctly parsed.');
    }
}
